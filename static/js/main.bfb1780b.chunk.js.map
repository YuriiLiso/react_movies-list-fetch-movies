{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","request","url","fetch","then","response","ok","Error","status","statusText","json","data","getData","FindMovie","addedMovie","useState","foundTitle","setTitle","newMovie","setMovie","isDanger","setDanger","getMovie","a","movieFromServer","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","allMovies","setAllMovies","some","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfb1780b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies = [] }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = `https://www.omdbapi.com/?apikey=e8bbd6b8&t=`;\n\nexport function getData(url) {\n  return fetch(BASE_URL + url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json()\n        .then(data => data);\n    });\n}\n\nexport const request = url => getData(url);\n","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { request } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addedMovie }) => {\n  const [foundTitle, setTitle] = useState('');\n  const [newMovie, setMovie] = useState(null);\n  const [isDanger, setDanger] = useState(false);\n\n  const getMovie = async() => {\n    const movieFromServer = await request(`${foundTitle}`);\n\n    if (movieFromServer.Response !== 'False') {\n      const { Title, Plot, Poster, imdbID } = movieFromServer;\n      const movie = {\n        title: Title,\n        description: Plot,\n        imgUrl: Poster,\n        imdbUrl: `https://www.imdb.com/title/${imdbID}/`,\n        imdbId: imdbID,\n      };\n\n      setMovie(movie);\n      setDanger(false);\n    } else {\n      setMovie(null);\n      setTitle(foundTitle);\n      setDanger(true);\n    }\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          getMovie();\n        }}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input', {\n                  'is-danger': isDanger,\n                },\n              )}\n              value={foundTitle}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setDanger(false);\n              }}\n            />\n          </div>\n\n          {isDanger && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!newMovie}\n              onClick={() => {\n                addedMovie(newMovie);\n                setTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {newMovie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...newMovie} />\n          </>\n        )}\n\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addedMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [allMovies, setAllMovies] = useState([...data]);\n\n  const addMovie = (movie) => {\n    const includedMovie = allMovies.some(el => el.imdbId === movie.imdbId);\n\n    if (!includedMovie) {\n      setAllMovies([...allMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={allMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addedMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}